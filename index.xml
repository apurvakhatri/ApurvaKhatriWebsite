<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Apurva Khatri</title>
    <link>https://apurvakhatri.com/</link>
    <description>Recent content on Apurva Khatri</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://apurvakhatri.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>143. Reorder List</title>
      <link>https://apurvakhatri.com/leetcode/linkedlist/first-problem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://apurvakhatri.com/leetcode/linkedlist/first-problem/</guid>
      <description>Day VII</description>
    </item>
    
    <item>
      <title>17. Letter Combinations of a Phone Number</title>
      <link>https://apurvakhatri.com/leetcode/backtracking/1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://apurvakhatri.com/leetcode/backtracking/1/</guid>
      <description>Day I</description>
    </item>
    
    <item>
      <title>22. Generate Parentheses</title>
      <link>https://apurvakhatri.com/leetcode/dynamic-programming/fourth-problem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://apurvakhatri.com/leetcode/dynamic-programming/fourth-problem/</guid>
      <description>Day IV</description>
    </item>
    
    <item>
      <title>279. Perfect Squares</title>
      <link>https://apurvakhatri.com/leetcode/dynamic-programming/second-problem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://apurvakhatri.com/leetcode/dynamic-programming/second-problem/</guid>
      <description>Day II</description>
    </item>
    
    <item>
      <title>3. Longest Substring Without Repeating Characters</title>
      <link>https://apurvakhatri.com/leetcode/arrays/1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://apurvakhatri.com/leetcode/arrays/1/</guid>
      <description>Day I</description>
    </item>
    
    <item>
      <title>338. Counting Bits</title>
      <link>https://apurvakhatri.com/leetcode/dynamic-programming/third-problem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://apurvakhatri.com/leetcode/dynamic-programming/third-problem/</guid>
      <description>Day III</description>
    </item>
    
    <item>
      <title>45. Jump Game II</title>
      <link>https://apurvakhatri.com/leetcode/dynamic-programming/fifth-problem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://apurvakhatri.com/leetcode/dynamic-programming/fifth-problem/</guid>
      <description>Day V</description>
    </item>
    
    <item>
      <title>647. Palindromic Substrings</title>
      <link>https://apurvakhatri.com/leetcode/arrays/2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://apurvakhatri.com/leetcode/arrays/2/</guid>
      <description>Day II</description>
    </item>
    
    <item>
      <title>746. Min Cost Climbing Stairs</title>
      <link>https://apurvakhatri.com/leetcode/dynamic-programming/first-problem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://apurvakhatri.com/leetcode/dynamic-programming/first-problem/</guid>
      <description>Day I</description>
    </item>
    
    <item>
      <title>91. Decode Ways</title>
      <link>https://apurvakhatri.com/leetcode/dynamic-programming/sixth-problem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://apurvakhatri.com/leetcode/dynamic-programming/sixth-problem/</guid>
      <description>Day VI</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://apurvakhatri.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://apurvakhatri.com/about/</guid>
      <description>Hi, I&amp;rsquo;m Apurva Khatri (Ah-poor-vah Khuh-tree), currently pursuing a Master of Science in Computer Science at Northeastern University. With approximately three years of experience as a software developer, I specialize in designing and implementing robust solutions across various technologies and platforms.
Professional Background I have 2.8 years of experience as a Software Developer at ICICI Lombard, a leading general insurance company in India. During my time there, I played a pivotal role in:</description>
    </item>
    
    <item>
      <title>Basics for Software Interview</title>
      <link>https://apurvakhatri.com/dsa/revision/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://apurvakhatri.com/dsa/revision/</guid>
      <description>Table of Contents Binary Search Algorithm to Find the Smallest Index of an Element Implementation QuickSort Implementation MergeSort Implementation HeapSort Implementation Merge Overlapping Intervals Implementation Binary Search Algorithm to Find the Smallest Index of an Element Binary search is a highly efficient algorithm used to find the position of a target value within a sorted array. The algorithm works by repeatedly dividing the search interval in half. If the value of the search key is less than the item in the middle of the interval, the algorithm narrows the interval to the lower half.</description>
    </item>
    
    <item>
      <title>Making decision to go right or left with Binary Search.</title>
      <link>https://apurvakhatri.com/posts/makingrightleftdecision/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://apurvakhatri.com/posts/makingrightleftdecision/</guid>
      <description>Making decision to go right or left with Binary Search. This post will be discussing approaches to certain problems which strictly teaches binary search.
I will not be presenting any solutions just discussing the approaches.
Single Element in Sorted Array Description: You are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once.
Return the single element that appears only once.</description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>https://apurvakhatri.com/resume/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://apurvakhatri.com/resume/</guid>
      <description> Previous Next &amp;nbsp; &amp;nbsp; Page: / </description>
    </item>
    
    <item>
      <title>ServerLess LLM Application</title>
      <link>https://apurvakhatri.com/projects/serverlessllmapplication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://apurvakhatri.com/projects/serverlessllmapplication/</guid>
      <description>Exploring how Amazon Bedrock and serverless architecture were used to automate customer call summarization.</description>
    </item>
    
    <item>
      <title>Technical Interview Questions for Interviewee</title>
      <link>https://apurvakhatri.com/dsa/questions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://apurvakhatri.com/dsa/questions/</guid>
      <description>During coding rounds, it&amp;#39;s important to clarify certain aspects of the problem with well-thought-out questions.</description>
    </item>
    
  </channel>
</rss>
